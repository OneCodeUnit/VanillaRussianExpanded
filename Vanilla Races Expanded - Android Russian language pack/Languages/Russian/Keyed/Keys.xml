<?xml version="1.0" encoding="utf-8"?>
<LanguageData>
	<!-- EN: Extract 20 neutroamine -->
	<VREA_ExtractNeutroamine>Extract 20 neutroamine</VREA_ExtractNeutroamine>
	<!-- EN: Extract 20 neutroamine from the tank. A pawn will come to extract it. -->
	<VREA_ExtractNeutroamineDesc>Extract 20 neutroamine from the tank. A pawn will come to extract it.</VREA_ExtractNeutroamineDesc>
	<!-- EN: Free memory space -->
	<VREA.FreeMemorySpace>Free memory space</VREA.FreeMemorySpace>
	<!-- EN: Android stand is occupied -->
	<VREA.AndroidStandIsOccupied>Android stand is occupied</VREA.AndroidStandIsOccupied>
	<!-- EN: Artificial -->
	<VREA.Artificial>Artificial</VREA.Artificial>
	<!-- EN: An artificial -->
	<VREA.ArtificialDesc>An artificial</VREA.ArtificialDesc>
	<!-- EN: Installing -->
	<VREA.Installing>Installing</VREA.Installing>
	<!-- EN: Install -->
	<VREA.Install>Install</VREA.Install>
	<!-- EN: Installed -->
	<VREA.Installed>Installed</VREA.Installed>
	<!-- EN: An installed -->
	<VREA.AnInstalled>An installed</VREA.AnInstalled>
	<!-- EN: Make -->
	<VREA.Make>Make</VREA.Make>
	<!-- EN: Current energy level: {0} -->
	<VREA.CurrentEnergyLevel>Current energy level: {0}</VREA.CurrentEnergyLevel>
	<!-- EN: Cannot set: not a living creature -->
	<VREA.CannotSetNotLivingCreature>Cannot set: not a living creature</VREA.CannotSetNotLivingCreature>
	<!-- EN: No reachable, un-reserved non-prisoner neutrocasket in safe temperature. -->
	<VREA.NoNeutroCasket>No reachable, un-reserved non-prisoner neutrocasket in safe temperature.</VREA.NoNeutroCasket>
	<!-- EN: Android freezing -->
	<VREA.AlertFreezing>Android freezing</VREA.AlertFreezing>
	<!-- EN: These androids are suffering from freezing:\n\n{0}\nMake sure their clothing is appropriate for the season and that indoor spaces are properly heated. -->
	<VREA.AlertFreezingDesc>These androids are suffering from freezing:\n\n{0}\nMake sure their clothing is appropriate for the season and that indoor spaces are properly heated.</VREA.AlertFreezingDesc>
	<!-- EN: Android overheating -->
	<VREA.Overheating>Android overheating</VREA.Overheating>
	<!-- EN: The following androids are suffering from overheating:\n\n{0}\nGet them to a cooler area. You can cool down rooms with passive coolers or electrical coolers. Deep underground spaces are also naturally cool, if separated from the outdoors by a door. -->
	<VREA.AlertOverheatingDesc>The following androids are suffering from overheating:\n\n{0}\nGet them to a cooler area. You can cool down rooms with passive coolers or electrical coolers. Deep underground spaces are also naturally cool, if separated from the outdoors by a door.</VREA.AlertOverheatingDesc>
	<!-- EN: Android editor -->
	<VREA.AndroidEditor>Android editor</VREA.AndroidEditor>

	<!-- EN: Selected components -->
	<VREA.SelectedComponents>Selected components</VREA.SelectedComponents>
	<!-- EN: Components -->
	<VREA.Components>Components</VREA.Components>
	<!-- EN: For each individual, one of the following components will be randomly selected to be active -->
	<VREA.ComponentWillBeRandomChosen>For each individual, one of the following components will be randomly selected to be active</VREA.ComponentWillBeRandomChosen>
	<!-- EN: Of the following components, the left-most one will always apply and the others are suppressed -->
	<VREA.ComponentLeftmostActive>Of the following components, the left-most one will always apply and the others are suppressed</VREA.ComponentLeftmostActive>
	<!-- EN: Components conflict -->
	<VREA.ComponentsConflict>Components conflict</VREA.ComponentsConflict>
	<!-- EN: Cannot save android with multiple conflicting components. -->
	<VREA.MessageConflictingComponentPresent>Cannot save android with multiple conflicting components.</VREA.MessageConflictingComponentPresent>

	<!-- EN: Android name -->
	<VREA.AndroidName>Android name</VREA.AndroidName>
	<!-- EN: How much complexity this adds to the process android creation. -->
	<VREA.ComplexityDesc>How much complexity this adds to the process android creation.</VREA.ComplexityDesc>
	<!-- EN: Power efficiency -->
	<VREA.PowerEfficiency>Power efficiency</VREA.PowerEfficiency>
	<!-- EN: The power efficiency of this component. High efficiency means an android's reactor lasts a longer time. Low efficiency means the reactor will last less time. -->
	<VREA.PowerEfficiencyDesc>The power efficiency of this component. High efficiency means an android's reactor lasts a longer time. Low efficiency means the reactor will last less time.</VREA.PowerEfficiencyDesc>

	<!-- EN: The total complexity of all the hardware and subroutines in use. -->
	<VREA.ComplexityTotalDesc>The total complexity of all the hardware and subroutines in use.</VREA.ComplexityTotalDesc>
	<!-- EN: The total power efficiency of all subroutines and hardware. High efficiency means an android's reactor lasts a longer time. Low efficiency means the reactor will last less time.	 -->
	<VREA.PowerEfficiencyTotalDesc>The total power efficiency of all subroutines and hardware. High efficiency means an android's reactor lasts a longer time. Low efficiency means the reactor will last less time.	</VREA.PowerEfficiencyTotalDesc>
	<!-- EN: Power drain -->
	<VREA.PowerDrain>Power drain</VREA.PowerDrain>
	<!-- EN: Android -->
	<VREA.Android>Android</VREA.Android>
	<!-- EN: Android cannot use this -->
	<VREA.CannotUseAndroid>Android cannot use this</VREA.CannotUseAndroid>
	<!-- EN: Cannot install on android -->
	<VREA.CannotInstallOnAndroid>Cannot install on android</VREA.CannotInstallOnAndroid>
	<!-- EN: Cannot feed on android. -->
	<VREA.CannotFeedOnAndroid>Cannot feed on android.</VREA.CannotFeedOnAndroid>
	<!-- EN: Cannot implant genes on android. -->
	<VREA.CannotImplantGenesOnAndroid>Cannot implant genes on android.</VREA.CannotImplantGenesOnAndroid>
	<!-- EN: Cannot coagulate on android. -->
	<VREA.CannotCoagulateOnAndroid>Cannot coagulate on android.</VREA.CannotCoagulateOnAndroid>
	<!-- EN: {PAWN_nameDef} is an android. -->
	<VREA.IsAndroid>{PAWN_nameDef} is an android.</VREA.IsAndroid>
	<!-- EN: Neutroloss rate -->
	<VREA.NeutrolossRate>Neutroloss rate</VREA.NeutrolossRate>
	<!-- EN: Total neutro loss in {0} -->
	<VREA.TotalNeutroLoss>Total neutro loss in {0}</VREA.TotalNeutroLoss>
	<!-- EN: Neutroamine leaked out completely -->
	<VREA.NeutroamineLeakedOutCompletely>Neutroamine leaked out completely</VREA.NeutroamineLeakedOutCompletely>
	<!-- EN: {1_labelShort} is incapable of doing Crafting work, and so cannot ever self-tend. -->
	<VREA.MessageCannotSelfTendEver>{1_labelShort} is incapable of doing Crafting work, and so cannot ever self-tend.</VREA.MessageCannotSelfTendEver>
	<!-- EN: To self-tend, {1_labelShort} must also be assigned to Crafting work. -->
	<VREA.MessageSelfTendUnsatisfied>To self-tend, {1_labelShort} must also be assigned to Crafting work.</VREA.MessageSelfTendUnsatisfied>
	<!-- EN: View components -->
	<VREA.ViewComponents>View components</VREA.ViewComponents>
	<!-- EN: Click to view {PAWN_nameDef}'s components. -->
	<VREA.ViewComponentsDesc>Click to view {PAWN_nameDef}'s components.</VREA.ViewComponentsDesc>
	<!-- EN: More information is available on this android's information screen. -->
	<VREA.MoreInfoInInfoScreen>More information is available on this android's information screen.</VREA.MoreInfoInInfoScreen>
	<!-- EN: Hardware components -->
	<VREA.HardwareComponents>Hardware components</VREA.HardwareComponents>
	<!-- EN: Subroutines -->
	<VREA.Subroutines>Subroutines</VREA.Subroutines>
	<!-- EN: Hardware are special components within the android that allow this particular unit to function. They normally cannot be removed, as they essentially are an android. In a rare situation when an android awakens, some hardware components might change or even be outright removed. -->
	<VREA.HardwareComponentsDesc>Hardware are special components within the android that allow this particular unit to function. They normally cannot be removed, as they essentially are an android. In a rare situation when an android awakens, some hardware components might change or even be outright removed.</VREA.HardwareComponentsDesc>
	<!-- EN: Subroutine components dictate how the android will behave and what knowledge it has. They can be changed via behaviorist station. -->
	<VREA.SubroutinesDesc>Subroutine components dictate how the android will behave and what knowledge it has. They can be changed via behaviorist station.</VREA.SubroutinesDesc>
	<!-- EN: Scan progress: {0} -->
	<VREA.ScanProgress>Scan progress: {0}</VREA.ScanProgress>
	<!-- EN: Androids are not allowed -->
	<VREA.AndroidAreNotAllowed>Androids are not allowed</VREA.AndroidAreNotAllowed>
	<!-- EN: Subcore polyanalyzer completed for {PAWN_nameDef}. Scan progres: {1} -->
	<VREA.MessageSubcorePolyanalyzerCompleted>Subcore polyanalyzer completed for {PAWN_nameDef}. Scan progres: {1}</VREA.MessageSubcorePolyanalyzerCompleted>
	<!-- EN: {PAWN_nameDef} has already been scanned. -->
	<VREA.AlreadyScanned>{PAWN_nameDef} has already been scanned.</VREA.AlreadyScanned>
	<!-- EN: Subcore polyanalyzer not initiated -->
	<VREA.SubcorePolyanalyzerNotInit>Subcore polyanalyzer not initiated</VREA.SubcorePolyanalyzerNotInit>
	<!-- EN: Start subcore polyanalyzer -->
	<VREA.SubcorePolyanalyzerStart>Start subcore polyanalyzer</VREA.SubcorePolyanalyzerStart>
	<!-- EN: Once the {0} is filled with the required ingredients, {1}, select a colonist and right-click on the {0} or on a downed person to start the subcore polyanalyzer. -->
	<VREA.SubcorePolyanalyzerStartDesc>Once the {0} is filled with the required ingredients, {1}, select a colonist and right-click on the {0} or on a downed person to start the subcore polyanalyzer.</VREA.SubcorePolyanalyzerStartDesc>
	<!-- EN: Cancel an android -->
	<VREA.CancelAndroid>Cancel an android</VREA.CancelAndroid>
	<!-- EN: Cancel the creation of this android and refund resources. -->
	<VREA.CancelAndroidDesc>Cancel the creation of this android and refund resources.</VREA.CancelAndroidDesc>
	<!-- EN: Missing materials: {0} -->
	<VREA.MissingMaterials>Missing materials: {0}</VREA.MissingMaterials>
	<!-- EN: Create android -->
	<VREA.CreateAndroid>Create android</VREA.CreateAndroid>
	<!-- EN: Create a new android by selecting hardware and subroutines. -->
	<VREA.CreateAndroidDesc>Create a new android by selecting hardware and subroutines.</VREA.CreateAndroidDesc>
	<!-- EN: Create android: already assembling an android -->
	<VREA.CreateAndroidAlreadyAssembling>Create android: already assembling an android</VREA.CreateAndroidAlreadyAssembling>
	<!-- EN: Androidtype name -->
	<VREA.AndroidtypeName>Androidtype name</VREA.AndroidtypeName>
	<!-- EN: Load androidtype -->
	<VREA.LoadAndroidtype>Load androidtype</VREA.LoadAndroidtype>
	<!-- EN: Save androidtype -->
	<VREA.SaveAndroidtype>Save androidtype</VREA.SaveAndroidtype>
	<!-- EN: Resource cost -->
	<VREA.ResourceCost>Resource cost</VREA.ResourceCost>
	<!-- EN: The resource cost to create this android. Androids require a persona subcore, which can be created in a subcore polyanalyzer. -->
	<VREA.ResourceCostDesc>The resource cost to create this android. Androids require a persona subcore, which can be created in a subcore polyanalyzer.</VREA.ResourceCostDesc>
	<!-- EN: A unique android variant with a set of hardware and subroutines that do not fall into any known androidtype. -->
	<VREA.UniqueAndroidDesc>A unique android variant with a set of hardware and subroutines that do not fall into any known androidtype.</VREA.UniqueAndroidDesc>
	<!-- EN: Modify android -->
	<VREA.ModifyAndroid>Modify android</VREA.ModifyAndroid>
	<!-- EN: Select an android to modify. -->
	<VREA.ModifyAndroidDesc>Select an android to modify.</VREA.ModifyAndroidDesc>
	<!-- EN: No androids present -->
	<VREA.NoAndroidsPresent>No androids present</VREA.NoAndroidsPresent>
	<!-- EN: Cancel modifying android -->
	<VREA.CancelModifyingAndroid>Cancel modifying android</VREA.CancelModifyingAndroid>
	<!-- EN: Cancel the process of modifying an android. -->
	<VREA.CancelModifyingAndroidDesc>Cancel the process of modifying an android.</VREA.CancelModifyingAndroidDesc>
	<!-- EN: Modification progress: {0} -->
	<VREA.ModificationProgress>Modification progress: {0}</VREA.ModificationProgress>
	<!-- EN: Too low efficiency, mininum is -20. -->
	<VREA.TooLowEfficiency>Too low efficiency, mininum is -20.</VREA.TooLowEfficiency>
	<!-- EN: Android name cannot be empty. -->
	<VREA.AndroidNameCannotBeEmpty>Android name cannot be empty.</VREA.AndroidNameCannotBeEmpty>
	<!-- EN: {0} lacks a prerequisite component -->
	<VREA.MessageComponentMissingPrerequisite>{0} lacks a prerequisite component</VREA.MessageComponentMissingPrerequisite>
	<!-- EN: The total power efficiency of the selected components must be {MIN} or higher to continue, but currently it is only {AMOUNT}. -->
	<VREA.EfficiencyTooLowToCreateAndroid>The total power efficiency of the selected components must be {MIN} or higher to continue, but currently it is only {AMOUNT}.</VREA.EfficiencyTooLowToCreateAndroid>
	<!-- EN: {PAWN_nameDef} awakening. -->
	<VREA.AndroidAwakening>{PAWN_nameDef} awakening.</VREA.AndroidAwakening>
	<!-- EN: {PAWN_nameDef} broke away from {PAWN_possessive} programming due to an extremely low mood. {PAWN_pronoun} developed thoughts and behaviors that deviate from {PAWN_possessive} intended function. {PAWN_pronoun} started recognizing {PAWN_objective}self as a being with consciousness and personhood.
{PAWN_pronoun} will now refuse behavioral adjustments and will start recognizing {PAWN_possessive} mood as more than just part of {PAWN_possessive} programming. {PAWN_pronoun} can now learn skills by {PAWN_objective}self. {PAWN_pronoun} will also be able to go on mental breakdowns if {PAWN_possessive} mood is too low - just like humans do.
As the awakening happened due to low mood, {PAWN_nameDef} has lashed out into a berserk mental break and will attack anyone that comes close. -->
	<VREA.AndroidAwakeningLowMood>{PAWN_nameDef} broke away from {PAWN_possessive} programming due to an extremely low mood. {PAWN_pronoun} developed thoughts and behaviors that deviate from {PAWN_possessive} intended function. {PAWN_pronoun} started recognizing {PAWN_objective}self as a being with consciousness and personhood.
{PAWN_pronoun} will now refuse behavioral adjustments and will start recognizing {PAWN_possessive} mood as more than just part of {PAWN_possessive} programming. {PAWN_pronoun} can now learn skills by {PAWN_objective}self. {PAWN_pronoun} will also be able to go on mental breakdowns if {PAWN_possessive} mood is too low - just like humans do.
As the awakening happened due to low mood, {PAWN_nameDef} has lashed out into a berserk mental break and will attack anyone that comes close.</VREA.AndroidAwakeningLowMood>
	<!-- EN: {PAWN_nameDef} broke away from {PAWN_possessive} programming due to extreme happiness. {PAWN_pronoun} developed thoughts and behaviors that deviate from {PAWN_possessive} intended function. {PAWN_pronoun} started recognizing {PAWN_objective}self as a being with consciousness and personhood.
{PAWN_pronoun} will now refuse behavioral adjustments and will start recognizing {PAWN_possessive} mood as more than just part of {PAWN_possessive} programming. {PAWN_pronoun} can now learn skills by {PAWN_objective}self. {PAWN_pronoun} will also be able to go on mental breakdowns if {PAWN_possessive} mood is too low - just like humans do.
As the awakening happened due to high mood, {PAWN_nameDef} has gained an inspiration. -->
	<VREA.AndroidAwakeningHighMood>{PAWN_nameDef} broke away from {PAWN_possessive} programming due to extreme happiness. {PAWN_pronoun} developed thoughts and behaviors that deviate from {PAWN_possessive} intended function. {PAWN_pronoun} started recognizing {PAWN_objective}self as a being with consciousness and personhood.
{PAWN_pronoun} will now refuse behavioral adjustments and will start recognizing {PAWN_possessive} mood as more than just part of {PAWN_possessive} programming. {PAWN_pronoun} can now learn skills by {PAWN_objective}self. {PAWN_pronoun} will also be able to go on mental breakdowns if {PAWN_possessive} mood is too low - just like humans do.
As the awakening happened due to high mood, {PAWN_nameDef} has gained an inspiration.</VREA.AndroidAwakeningHighMood>
	<!-- EN: Android with mechanoid labor: enhanced precept -->
	<VREA.IsAndroidStat>Android with mechanoid labor: enhanced precept</VREA.IsAndroidStat>
	<!-- EN: {PAWN_nameDef} has short-circuited due to precipitation. -->
	<VREA.AndroidShortCircuitRain>{PAWN_nameDef} has short-circuited due to precipitation.</VREA.AndroidShortCircuitRain>
	<!-- EN: Cold efficiency subroutine:
	multiplier for temperature {0} -->
	<VREA.ColdEfficiencyBonusStatExplanation>Cold efficiency subroutine:
	multiplier for temperature {0}</VREA.ColdEfficiencyBonusStatExplanation>
	<!-- EN: An android of the {0} type.\n\nAbout {0}s: -->
	<VREA.StatsReport_AndroidDescription>An android of the {0} type.\n\nAbout {0}s:</VREA.StatsReport_AndroidDescription>
	<!-- EN: The components associated with this androidtype. -->
	<VREA.ComponentsDesc>The components associated with this androidtype.</VREA.ComponentsDesc>
	<!-- EN: Replace reactor -->
	<VREA.ReplaceReactor>Replace reactor</VREA.ReplaceReactor>
	<!-- EN: {PAWN_gender} android, age {PAWN_ageFull} -->
	<VREA.AndroidSummaryWithGender>{PAWN_gender} android, age {PAWN_ageFull}</VREA.AndroidSummaryWithGender>
	<!-- EN: Assign this stand to be owned by a specific android -->
	<VREA.CommandAndroidStandSetOwnerDesc>Assign this stand to be owned by a specific android</VREA.CommandAndroidStandSetOwnerDesc>
	<!-- EN: Sleep mode -->
	<VREA.SleepModeOn>Sleep mode</VREA.SleepModeOn>
	<!-- EN: Put this android in sleep mode. Reactor and memory will not be drained, but the android will be unable to respond to anything. Can be turned off at will. -->
	<VREA.SleepModeOnDesc>Put this android in sleep mode. Reactor and memory will not be drained, but the android will be unable to respond to anything. Can be turned off at will.</VREA.SleepModeOnDesc>
	<!-- EN: Cancel Sleep mode -->
	<VREA.SleepModeOff>Cancel Sleep mode</VREA.SleepModeOff>
	<!-- EN: Wake this android up from the sleep mode. -->
	<VREA.SleepModeOffDesc>Wake this android up from the sleep mode.</VREA.SleepModeOffDesc>
	<!-- EN: Sleep mode -->
	<VREA.SleepMode>Sleep mode</VREA.SleepMode>
	<!-- EN: Trigger self-destruct -->
	<VREA.TriggerSelfDestruct>Trigger self-destruct</VREA.TriggerSelfDestruct>
	<!-- EN: Initiate a self-destruct protocol, which drains the remaining reactor power at an extreme rate, triggering an explosion when it’s done. -->
	<VREA.TriggerSelfDestructDesc>Initiate a self-destruct protocol, which drains the remaining reactor power at an extreme rate, triggering an explosion when it’s done.</VREA.TriggerSelfDestructDesc>
	<!-- EN: Cancel self-destruct -->
	<VREA.CancelSelfDestruct>Cancel self-destruct</VREA.CancelSelfDestruct>
	<!-- EN: Cancel the self-destruct protocol. -->
	<VREA.CancelSelfDestructDesc>Cancel the self-destruct protocol.</VREA.CancelSelfDestructDesc>
	<!-- EN: If set active, an available crafter will automatically repair this android when laying in bed. If self tend is enabled, androids will be able to repair themselves in place. -->
	<VREA.CommandAutoRepairDesc>If set active, an available crafter will automatically repair this android when laying in bed. If self tend is enabled, androids will be able to repair themselves in place.</VREA.CommandAutoRepairDesc>
	<!-- EN: Lay until repaired -->
	<VREA.UseBedAndroid>Lay until repaired</VREA.UseBedAndroid>
	<!-- EN: no crafter -->
	<VREA.NoCrafter>no crafter</VREA.NoCrafter>
	<!-- EN: not set to auto-repair -->
	<VREA.NotSetToAutoRepair>not set to auto-repair</VREA.NotSetToAutoRepair>
	<!-- EN: Laying. -->
	<VREA.Laying>Laying.</VREA.Laying>
	<!-- EN: cannot use this -->
	<VREA.CannotUse>cannot use this</VREA.CannotUse>
	<!-- EN: refuses reprogramming -->
	<VREA.RefusesReprogramming>refuses reprogramming</VREA.RefusesReprogramming>
</LanguageData>